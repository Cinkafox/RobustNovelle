using System.Threading.Tasks;
using Cinka.Game.Dialog.Data;
using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface.Controls;
using Robust.Client.UserInterface.XAML;

namespace Cinka.Game.UserInterface.Systems.Dialog.Widgets;

[GenerateTypedNameReferences]
public sealed partial class DialogGui : UIWidget
{
    public DialogUIController _dialogUiController;
    public Label? currentLabel;
    private IDialogAction? _action;
    public DialogGui()
    {
        RobustXamlLoader.Load(this);
        _dialogUiController = UserInterfaceManager.GetUIController<DialogUIController>();
        _dialogUiController.RegisterDialog(this);
        Skip.OnPressed += args =>
        {
            if(_dialogUiController.IsMessage)
                _dialogUiController.SpeedUpText();
            else
                Act();
        };
        
        _dialogUiController.MessageEnded += OnMessageEnded;
    }

    private void OnMessageEnded(Game.Dialog.Data.Dialog dialog)
    {
        _action = dialog.DefaultAction;
    }

    private void Act()
    {
        if(ButtonContainer.ChildCount > 0)
            return;
        _action?.Act();
        _action = null;
    }

    public void AppendText(string text)
    {
        var label = AppendLabel();
        label.Text = text;
    }

    public void AppendLetter(char let)
    {
        if (currentLabel == null)
            AppendLabel();
        
        currentLabel.Text += let;
    }
    
    public Label AppendLabel()
    {
        var label = new Label();
        TextContainer.AddChild(label);
        currentLabel = label;
        return label;
    }

    public void AddButton(DialogButton button)
    {
        var btn = new Button();
        btn.Text = button.Name;
        btn.OnPressed += _ => button.OnAction.Act();
        ButtonContainer.AddChild(btn);
    }
    
    public void ClearText()
    {
        TextContainer.DisposeAllChildren();
        ClearButtons();
        currentLabel = null;
    }

    public void ClearButtons()
    {
        ButtonContainer.DisposeAllChildren();
    }
}